using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Drawing;
using System.Data;
using System.Text;
using System.Linq;
using System.Threading.Tasks;
using System.Windows.Forms;
using DevExpress.XtraEditors;
using System.Data.Entity;
using QuanLyBaoHiem.DAO;
using Model.Dao;

namespace QuanLyBaoHiem
{
    public partial class ucThongTinChinhSachBaoHiem : DevExpress.XtraEditors.XtraUserControl
    {
        public ucThongTinChinhSachBaoHiem()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            QuanLyBaoHiem.Models.QLBHContext dbContext = new QuanLyBaoHiem.Models.QLBHContext();
            // Call the LoadAsync method to asynchronously get the data for the given DbSet from the database.
            dbContext.GoiHopDongs.LoadAsync().ContinueWith(loadTask =>
            {
                // Bind data to control when loading complete
                goiHopDongsBindingSource.DataSource = dbContext.GoiHopDongs.Where(p => p.Status == true).ToList();
            }, System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext());



        }

        public void refreshdata()
        {
            QuanLyBaoHiem.Models.QLBHContext dbContext = new QuanLyBaoHiem.Models.QLBHContext();
            // Call the LoadAsync method to asynchronously get the data for the given DbSet from the database.
            dbContext.GoiHopDongs.LoadAsync().ContinueWith(loadTask =>
            {
                // Bind data to control when loading complete
                goiHopDongsBindingSource.DataSource = dbContext.GoiHopDongs.Where(p => p.Status == true).ToList();
            }, System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext());
        }

        private void labelControl2_Click(object sender, EventArgs e)
        {

        }

        private void gridControl1_Click(object sender, EventArgs e)
        {
            txtMaGoiHD.Text = gridView1.GetRowCellValue(gridView1.FocusedRowHandle, "MaGoiHD").ToString();
            txtMucPhi.Text = gridView1.GetRowCellValue(gridView1.FocusedRowHandle, "MucPhi").ToString();
            txtGiaTriBaoHiem.Text = gridView1.GetRowCellValue(gridView1.FocusedRowHandle, "GiaTriBaoHiem").ToString();
            txtThoiHanBaoHiem.Text = gridView1.GetRowCellValue(gridView1.FocusedRowHandle, "ThoiHanBaoHiem").ToString();
            txtThoiHanDongPhi.Text = gridView1.GetRowCellValue(gridView1.FocusedRowHandle, "ThoiHanDongPhi").ToString();
            enabletextbox();
            btn_luu.Visible = true;
            btn_huy.Visible = true;
        }

        public void enabletextbox()
        {
            txtMucPhi.Enabled = true;
            txtGiaTriBaoHiem.Enabled = true;
            txtThoiHanBaoHiem.Enabled = true;
            txtThoiHanDongPhi.Enabled = true;
        }

        public void disabletextbox()
        {
            txtMucPhi.Enabled = false;
            txtGiaTriBaoHiem.Enabled = false;
            txtThoiHanBaoHiem.Enabled = false;
            txtThoiHanDongPhi.Enabled = false;
        }

        private void btn_them_Click(object sender, EventArgs e)
        {
            ThemGoiHD tghd = new ThemGoiHD(this);
            tghd.ShowDialog();

        }

        private void btn_sua_Click(object sender, EventArgs e)
        {
            try
            {
                if (txtMaGoiHD.Text == "" || txtMucPhi.Text == "" || txtGiaTriBaoHiem.Text == "" ||
                    txtThoiHanBaoHiem.Text == "" || txtThoiHanDongPhi.Text == "")
                    XtraMessageBox.Show("Điền đầy đủ thông tin", "Thông báo");
                else
                {
                    GoiHopDongDao ghd = new GoiHopDongDao();
                    ghd.SuaGHD(txtMaGoiHD.Text, txtMucPhi.Text, txtGiaTriBaoHiem.Text, Convert.ToInt32(txtThoiHanBaoHiem.Text), Convert.ToInt32(txtThoiHanDongPhi.Text));
                    XtraMessageBox.Show("Sửa thành công", "Thông báo");
                    goiHopDongsBindingSource.DataSource = ghd.Load();
                }
            }
            catch (Exception ex)
            {
                string loi = ex.InnerException.ToString();
                string[] loichia = loi.Split('\n');
                string[] loichinh = loichia[0].Split(':');
                XtraMessageBox.Show(loichinh[2]);
            }
        }

        private void btn_xoa_Click(object sender, EventArgs e)
        {
            if (txtMaGoiHD.Text == "")
            {
                XtraMessageBox.Show("Bạn chưa chọn dòng!!");
            }
            else
            {
                DialogResult dialogResult = XtraMessageBox.Show("Xác nhận", "Bạn thực sự muốn xóa?", MessageBoxButtons.YesNo);
                if (dialogResult == DialogResult.Yes)
                {
                    GoiHopDongDao ghd = new GoiHopDongDao();
                    ghd.xoagoihd(txtMaGoiHD.Text);
                    XtraMessageBox.Show("Xóa thành công", "Thông báo");
                    goiHopDongsBindingSource.DataSource = ghd.Load();
                    resettextbox();

                }
            }

        }

        private void comboBoxEdit1_SelectedIndexChanged(object sender, EventArgs e)
        {

        }

        private void textEdit1_TextChanged(object sender, EventArgs e)
        {
            gridView1.FindFilterText = textEdit1.Text;
        }

        private void comboBoxEdit2_SelectedIndexChanged(object sender, EventArgs e)
        {

        }

        private void textEdit1_EditValueChanged(object sender, EventArgs e)
        {

        }

        private void comboBoxEdit2_SelectedValueChanged(object sender, EventArgs e)
        {

        }

        private void cboMaGoiHD_SelectedIndexChanged(object sender, EventArgs e)
        {

        }

        private void groupControl1_Paint(object sender, PaintEventArgs e)
        {

        }

        private void labelControl17_Click(object sender, EventArgs e)
        {

        }

        private void simpleButton6_Click(object sender, EventArgs e)
        {

        }

        private void btn_Refresh_Click(object sender, EventArgs e)
        {
            GoiHopDongDao ghd = new GoiHopDongDao();
            goiHopDongsBindingSource.DataSource = ghd.Load();
            disabletextbox();
            resettextbox();
            btn_luu.Visible = false;
            btn_huy.Visible = false;
        }

        public void resettextbox()
        {
            txtMaGoiHD.Text = "";
            txtMucPhi.Text = "";
            txtGiaTriBaoHiem.Text = "";
            txtThoiHanBaoHiem.Text = "";
            txtThoiHanDongPhi.Text = "";
            btn_luu.Visible = false;
            btn_huy.Visible = false;
        }

        private void btn_huy_Click(object sender, EventArgs e)
        {
            txtMaGoiHD.Text = "";
            txtMucPhi.Text = "";
            txtGiaTriBaoHiem.Text = "";
            txtThoiHanBaoHiem.Text = "";
            txtThoiHanDongPhi.Text = "";
            disabletextbox();
            this.ActiveControl = null;

            btn_luu.Visible = false;
            btn_huy.Visible = false;
        }

        private void labelControl3_Click(object sender, EventArgs e)
        {

        }

        private void simpleButton1_Click(object sender, EventArgs e)
        {
            textEdit1.Text = "";
        }
    }
}
